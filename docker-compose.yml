# Docker Compose for local development
# Demonstrates: Container orchestration, service dependencies, networking

version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: investorlens_db
    environment:
      POSTGRES_USER: investorlens
      POSTGRES_PASSWORD: investorlens_dev_password
      POSTGRES_DB: investorlens
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U investorlens"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: investorlens_redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: investorlens_backend
    environment:
      DATABASE_URL: postgresql://investorlens:investorlens_dev_password@db:5432/investorlens
      REDIS_URL: redis://redis:6379/0
      SECRET_KEY: dev_secret_key_change_in_production
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      NEWS_API_KEY: ${NEWS_API_KEY}
      DEBUG: "True"
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: build
    container_name: investorlens_frontend
    environment:
      VITE_API_URL: http://localhost:8000
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: npm run dev -- --host 0.0.0.0 --port 3000

volumes:
  postgres_data:
    driver: local

