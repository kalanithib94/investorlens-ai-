═══════════════════════════════════════════════════════════════
  INVESTORLENS AI - DEPLOYMENT CHECKLIST
  Print this and check off as you go! ✓
═══════════════════════════════════════════════════════════════

PART 1: RAILWAY BACKEND (12 minutes)
═══════════════════════════════════════════════════════════════

□ 1.1 Open railway.app in browser
□ 1.2 Click "Login" → "Login with GitHub" → Authorize
□ 1.3 Click "New Project" → "Deploy from GitHub repo"
□ 1.4 Select "investorlens-ai-" → Click "Deploy Now"
□ 1.5 Wait for initial build (2-3 minutes)
□ 1.6 Click "+ New" → "Database" → "Add PostgreSQL"
□ 1.7 Wait for database (1 minute)
□ 1.8 Click backend service card
□ 1.9 Click "Settings" tab
□ 1.10 Find "Root Directory" → Type: backend
□ 1.11 Wait for redeploy (1-2 minutes)
□ 1.12 Click "Variables" tab
□ 1.13 Add Variable: SECRET_KEY = investorlens-secret-key-demo-2025
□ 1.14 Add Variable: CORS_ORIGINS = *
□ 1.15 (Optional) Add Variable: OPENAI_API_KEY = sk-...
□ 1.16 Click "Settings" → "Networking" → "Generate Domain"
□ 1.17 COPY Railway URL → Save in Notepad
      Example: https://investorlens-production-xxxx.up.railway.app
□ 1.18 Test: Open YOUR_URL/health in browser
      Should see: {"status":"healthy"}
□ 1.19 Test: Open YOUR_URL/docs in browser
      Should see: Swagger API documentation

✓ BACKEND IS LIVE!

═══════════════════════════════════════════════════════════════

PART 2: VERCEL FRONTEND (8 minutes)
═══════════════════════════════════════════════════════════════

□ 2.1 Open vercel.com in browser
□ 2.2 Click "Sign Up" or "Login" → "Continue with GitHub" → Authorize
□ 2.3 Click "Add New..." → "Project"
□ 2.4 Find "investorlens-ai-" → Click "Import"
□ 2.5 Click "Edit" next to Root Directory
□ 2.6 Select "frontend" from dropdown
□ 2.7 Verify Framework Preset shows "Vite"
□ 2.8 Scroll to "Environment Variables" section
□ 2.9 Add Variable:
      Name: VITE_API_URL
      Value: [PASTE YOUR RAILWAY URL FROM NOTEPAD]
      Example: https://investorlens-production-xxxx.up.railway.app
□ 2.10 Click "Add" button for the variable
□ 2.11 Click big blue "Deploy" button at bottom
□ 2.12 Wait for build (2-3 minutes)
□ 2.13 Click "Visit" button or copy Vercel URL
□ 2.14 SAVE Vercel URL in Notepad
       Example: https://investorlens-ai-xxxx.vercel.app
□ 2.15 Verify frontend loads (should see dashboard)
□ 2.16 Go back to Railway → Backend → Variables tab
□ 2.17 Find CORS_ORIGINS variable → Click to edit
□ 2.18 Change * to YOUR Vercel URL (from Notepad)
□ 2.19 Save changes → Wait 30 seconds
□ 2.20 Refresh frontend page (F5)

✓ FRONTEND IS LIVE!

═══════════════════════════════════════════════════════════════

PART 3: VERIFICATION (2 minutes)
═══════════════════════════════════════════════════════════════

□ 3.1 Open frontend URL → Should load without errors
□ 3.2 Open backend URL/docs → Should show API documentation
□ 3.3 In API docs, find "POST /api/companies"
□ 3.4 Click "Try it out"
□ 3.5 Paste this JSON:
      {
        "name": "TechFlow AI",
        "description": "AI-powered workflow automation",
        "industry": "Enterprise Software",
        "stage": "Series B"
      }
□ 3.6 Click "Execute" → Should get 201 response
□ 3.7 Refresh frontend → Should see "TechFlow AI" company card

✓ EVERYTHING WORKS!

═══════════════════════════════════════════════════════════════

SAVE THESE URLS (Write them here):
═══════════════════════════════════════════════════════════════

Frontend:
https://____________________________________________________

Backend:
https://____________________________________________________

API Docs:
https://____________________________________________________/docs

GitHub:
https://github.com/kalanithib94/investorlens-ai-

═══════════════════════════════════════════════════════════════

FINAL STEPS:
═══════════════════════════════════════════════════════════════

□ Update GitHub README with live URLs
□ Bookmark all URLs in browser
□ Test all URLs one more time
□ Read TECHNICAL_EXPLANATION.md for interview prep
□ Practice 2-minute demo

═══════════════════════════════════════════════════════════════

✓ READY FOR INTERVIEW!

Total time: ~20 minutes
Result: Live production application

═══════════════════════════════════════════════════════════════

